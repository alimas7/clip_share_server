name: Create-Release
run-name: Create release ${{github.ref_name}}

on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  Checks:
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Set version
      run: |
        echo VERSION="$(echo '${{github.ref_name}}' | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')" >> $GITHUB_ENV

    - name: Check app.rc version
      run: |
        [ $(grep "${{env.VERSION}}" res/win/app.rc | grep -iE '(File|Product)Version' | wc -l) = 4 ]

    - name: Check release_notes.md version
      run: |
        for v in $(grep -oE '[0-9]+\.[0-9]+\.[0-9]+' .github/workflows/resources/release_notes.md); do \
        grep -qF "${{env.VERSION}}" <<<"$v"; \
        done

  Build-and-Test:
    uses: ./.github/workflows/build-test.yml
    permissions:
      contents: write
      pull-requests: write
      security-events: write
    needs: Checks

  Linux:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs:
    - Checks
    - Build-and-Test

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Set version
      run: |
        version="$(echo '${{github.ref_name}}' | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')"
        archive="clip_share_server-${version}-linux_x86_64"
        echo ARCHIVE_NAME_NO_EXT="${archive}" >> $GITHUB_ENV
        echo ARCHIVE_NAME="${archive}.tar.gz" >> $GITHUB_ENV

    - name: Build on Ubuntu 24
      run: docker build -t clipshare:ubuntu24 -f docker/release/Dockerfile.ubuntu24 .

    - name: Copy binaries
      run: |
        mkdir dist
        chmod 777 dist
        docker run -v './dist:/home/user/src/dist' clipshare:ubuntu24
        [ -f helper_tools/install-linux.sh ] && cp helper_tools/install-linux.sh dist/
        sudo chmod +x dist/*
        cd dist
        sha256sum -b * >SHA2-256SUM
        cd ..
        mv dist "${{env.ARCHIVE_NAME_NO_EXT}}"
        tar -cf - --sort=name --owner=root:0 --group=root:0 --no-same-owner "${{env.ARCHIVE_NAME_NO_EXT}}" | \
        gzip -9 >"${{env.ARCHIVE_NAME}}"

    - name: Upload Linux version
      uses: actions/upload-artifact@v4
      with:
        name: "${{env.ARCHIVE_NAME}}"
        path: "${{env.ARCHIVE_NAME}}"
        retention-days: 3
        if-no-files-found: error
        compression-level: 0

  Create_Release:
    needs:
    - Linux
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write
      id-token: write
      attestations: write

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Set variables
      run: |
        version="$(echo '${{github.ref_name}}' | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')"
        echo VERSION="$version" >> $GITHUB_ENV
        echo TAG="v${version}" >> $GITHUB_ENV
        echo TITLE="Version ${version}" >> $GITHUB_ENV
        echo FILE_LINUX="clip_share_server-${version}-linux_x86_64.tar.gz" >> $GITHUB_ENV

    - name: Download Linux version
      uses: actions/download-artifact@v4
      with:
        name: "${{env.FILE_LINUX}}"
        path: "${{env.FILE_LINUX}}"

    - name: Prepare assets
      run: |
        mkdir release
        mv "${{env.FILE_LINUX}}/${{env.FILE_LINUX}}" release/
        mv .github/workflows/resources/clipshare.conf release/
        mv helper_tools/install-online-linux-mac.sh release/install-linux-mac.sh
        cd release
        sed -i "s/^VERSION_DEFAULT=$/VERSION_DEFAULT=${{env.VERSION}}/" install-linux-mac.sh
        sha256sum -b * >SHA2-256SUM

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: "release/SHA2-256SUM"

    - name: Create release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        sed -i "s/<VERSION>/${{env.VERSION}}/g" .github/workflows/resources/release_notes.md
        sed -i "s/<FILE_LINUX>/${{env.FILE_LINUX}}/g" .github/workflows/resources/release_notes.md
        cd release
        gh release create "${{env.TAG}}" --latest --verify-tag \
        --notes-file ../.github/workflows/resources/release_notes.md \
        --title "${{env.TITLE}}" *
